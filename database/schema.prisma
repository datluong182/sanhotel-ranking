datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model tbHotel {
  id            String          @id @default(uuid())
  name          String
  address       String
  avatar        String?
  gm            String
  links         Json
  tbObject      tbObject[]
  tbReview      tbReview[]
  tbStaff       tbStaff[]
  tbStaffLog    tbStaffLog[]
  tbCompetition tbCompetition[]
  type          TYPE_HOTEL?
  disable       Boolean?
}

model tbStaff {
  id              String       @id @default(uuid())
  tbHotel         tbHotel      @relation(fields: [tbHotelId], references: [id], onDelete: Cascade)
  tbHotelId       String
  role            String
  name            String
  otherNames      String[]
  fiveStarsReview Json
  tbStaffLog      tbStaffLog[]
}

model tbStaffLog {
  id                  String            @id @default(uuid())
  tbHotel             tbHotel           @relation(fields: [tbHotelId], references: [id], onDelete: Cascade)
  tbHotelId           String
  name                String
  fiveStarsReview     Json
  updatedAt           DateTime
  tbStaffLastUpdate   tbStaffLastUpdate @relation(fields: [tbStaffLastUpdateId], references: [id])
  tbStaffLastUpdateId String
  tbStaff             tbStaff           @relation(fields: [tbStaffId], references: [id])
  tbStaffId           String
}

model tbStaffLastUpdate {
  id         String       @id @default(uuid())
  updatedAt  DateTime
  tbStaffLog tbStaffLog[]
}

model tbReview {
  id            String       @id @default(uuid())
  tbHotel       tbHotel      @relation(fields: [tbHotelId], references: [id], onDelete: Cascade)
  tbHotelId     String
  username      String
  title         String
  content       String[]
  extra         Json
  createdAt     DateTime
  monthCreated  Int
  yearCreated   Int
  platform      PLATFORM
  tbObjectLog   tbObjectLog? @relation(fields: [tbObjectLogId], references: [id])
  tbObjectLogId String?
}

model tbLastUpdateReview {
  id        String   @id @default(uuid())
  updatedAt DateTime
}

model tbObject {
  id                String        @id @default(uuid())
  name              String
  url               String
  score             Float
  numberScoreReview Int[]
  updatedAt         DateTime
  extra             Json
  platform          PLATFORM
  tbObjectLog       tbObjectLog[]
  tbHotel           tbHotel       @relation(fields: [tbHotelId], references: [id], onDelete: Cascade)
  tbHotelId         String
}

model tbObjectLog {
  id                String     @id @default(uuid())
  name              String
  url               String
  score             Float
  numberScoreReview Int[]
  updatedAt         DateTime
  extra             Json
  platform          PLATFORM
  isManual          Boolean
  messages          String[]
  tbObject          tbObject   @relation(fields: [tbObjectId], references: [id], onDelete: Cascade)
  tbObjectId        String
  review            tbReview[]
}

model tbLastUpdate {
  id        String   @id @default(uuid())
  platform  PLATFORM
  updatedAt DateTime
  isManual  Boolean
}

model tbResponse {
  id       String            @id @default(uuid())
  name     String
  value    Float
  color    String
  platform PLATFORM_RESPONSE
}

enum PLATFORM_RESPONSE {
  BOOKING
  HUBSPOT
}

enum PLATFORM {
  TRIP
  BOOKING
  GOOGLE
  AGODA
}

enum TYPE_HOTEL {
  ALLY
  ENEMY
}

model tbCompetition {
  month               Int
  year                Int
  // extra bao gồm các thông tin như 
  // TRIP: rank
  extra               Json
  score               Float
  // Số lượng rv cao all time
  numberReviewHighAll Int
  // Số lượng rv cao trong tháng
  numberReviewHigh    Int
  // Số lượng rv cao từng ngày trong tháng 
  reviewHigh          Int[]
  // Số lượng rv thấp trong tháng
  numberReviewBad     Int
  // Số lượng rv thấp từng ngày trong tháng
  reviewBad           Int[]
  updatedAt           DateTime
  platform            PLATFORM
  tbHotel             tbHotel  @relation(fields: [tbHotelId], references: [id], onDelete: Cascade)
  tbHotelId           String

  @@id([month, year, tbHotelId, platform])
}
